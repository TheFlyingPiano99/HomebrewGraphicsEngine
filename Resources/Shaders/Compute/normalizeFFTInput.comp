#version 430 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(rg32f, binding = 0) uniform image3D imgOutput;

uniform float u_norm;  // Normalization factor

void main() {
    ivec3 texelCoord = ivec3(gl_GlobalInvocationID.xyz);
    //ivec3 offset = ivec3(gl_NumWorkGroups.xyz / 2);
	ivec3 offset = ivec3(0);

    vec2 xy = vec2(0, 0);
    if (texelCoord.x - offset.x >= 0, texelCoord.y - offset.y >= 0, texelCoord.z - offset.z >= 0)
    {
        xy = imageLoad(imgOutput, texelCoord - offset).xy * u_norm;
    }
    
    imageStore(imgOutput, texelCoord, vec4(xy, 0.0, 0.0));
}
