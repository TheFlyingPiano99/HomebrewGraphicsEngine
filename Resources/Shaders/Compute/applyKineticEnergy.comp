#version 430 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(rg32f, binding = 0) uniform image3D imgOutput;

vec2 expi(float ang) { return vec2(cos(ang), sin(ang)); }

vec2 zmul(vec2 z1, vec2 z2) {
    return vec2(z1.x * z2.x - z1.y * z2.y,
                z1.x * z2.y + z1.y * z2.x);
}

uniform float u_delta_time;

void main() {
    ivec3 texelCoord = ivec3(gl_GlobalInvocationID.xyz);
    vec3 k = (vec3(gl_GlobalInvocationID) / vec3(gl_NumWorkGroups));
    vec2 psi = imageLoad(imgOutput, texelCoord).xy;
    float angle = dot(k, k) * u_delta_time * 0.25;
    psi = zmul(expi(angle), psi);
    imageStore(imgOutput, texelCoord, vec4(psi, 0.0, 0.0));
}
